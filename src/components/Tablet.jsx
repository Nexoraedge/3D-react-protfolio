/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Ahsan.Faraz (https://sketchfab.com/Ahsan.Faraz)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/sci-fi-tablet-aad6f13c03344f34822ff1d594a7b7bb
Title: Sci fi - Tablet
*/

import React, { useRef, useState, useEffect } from 'react'
import { OrbitControls, useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

const Tablet = ({ screenTexture, animationTrigger, ...props }) => {
    const group = useRef()
    const { nodes, materials } = useGLTF('/models/tablet.glb')
    const [animationProgress, setAnimationProgress] = useState(0)

    // Reset animation progress when the trigger changes
    useEffect(() => {
        setAnimationProgress(0)
    }, [animationTrigger])


    useFrame((state, delta) => {
        if (animationProgress < 1) {
            setAnimationProgress((prev) => Math.min(prev + delta * 0.5, 1))
        }
        else{
            group.current.rotation.y += delta * 0.9;
        }
        group.current.position.z = 5 - 5 * animationProgress
        group.current.scale.set(0.1 + 0.9 * animationProgress, 0.1 + 0.9 * animationProgress, 0.1 + 0.9 * animationProgress) 
    })

    return (
        <group ref={group} {...props} dispose={null}>
            <group rotation={[0, -Math.PI / 2, 0]}>
                <group rotation={[Math.PI / 2, Math.PI / 2, 0]} scale={3}>
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Tablet_low_tablet_0.geometry}
                        material={materials.tablet}
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Screen_low_Ui_0.geometry}
                        material={screenTexture || materials.material}
                              />
                        <OrbitControls enableZoom={false} />  
                </group>
            </group>
        </group>
    )
}

useGLTF.preload('/models/tablet.glb')
export default Tablet;
