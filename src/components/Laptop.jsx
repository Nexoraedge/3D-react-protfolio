/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Berk Gedik (https://sketchfab.com/berkgedik)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/cyberpunk-laptop-concept-design-fddc4e68cc6c498b88b19af1a05bd420
Title: CyberPunk Laptop Concept Design
*/

import * as THREE from 'three'
import React, { useRef, useEffect, useMemo } from 'react'
import { useGLTF } from '@react-three/drei'
/*




    Cube007_Auto_01_0: THREE.Mesh
    Keys_Auto_02_0: THREE.Mesh
    Cube012_Auto_02_0: THREE.Mesh
    Cube018_Auto_02_0: THREE.Mesh
    Cube019_Auto_02_0: THREE.Mesh
    Cube013_Auto_02_0: THREE.Mesh
    Cube006_Auto_03_0: THREE.Mesh
    Cube005_Auto_03_0: THREE.Mesh
    Cube017_Auto_03_0: THREE.Mesh
    Cube001_Auto_03_0: THREE.Mesh
    BezierCurve001_Auto_03_0: THREE.Mesh
    BezierCurve_Auto_03_0: THREE.Mesh
    BezierCurve002_Auto_03_0: THREE.Mesh
    Cube015_Auto_03_0: THREE.Mesh
    Cube014_Auto_03_0: THREE.Mesh
    Cylinder_Auto_03_0: THREE.Mesh
    Cylinder002_Auto_03_0: THREE.Mesh
    Cube016_Auto_03_0: THREE.Mesh
    Cube_Auto_04_0: THREE.Mesh
    Cube_Screen_0: THREE.Mesh
    Cube002_Auto_04_0: THREE.Mesh
    Cube003_Auto_04_0: THREE.Mesh
    Cube020_Auto_04_0: THREE.Mesh
  }
  materials: {
    Auto_01: THREE.MeshStandardMaterial
    Auto_02: THREE.MeshStandardMaterial
    Auto_03: THREE.MeshStandardMaterial
    Auto_04: THREE.MeshStandardMaterial



*/
const Laptop = ({ media, zoom = 1, rotation = 0, ...props }) => {
  const { nodes, materials } = useGLTF('/models/laptop.glb')

  const screenRef = useRef()

  // prepare texture if media provided (future step)
  const texture = useMemo(() => {
    if (!media) return null;
    const loader = new THREE.TextureLoader();
    return loader.load(media, (tex) => {
      // Ensure scaling is centered
      tex.center.set(0.5, 0.5);
      tex.wrapS = tex.wrapT = THREE.ClampToEdgeWrapping;
    });
  }, [media]);

  useEffect(() => {
    if (!screenRef.current) return;

    if (texture) {
      const scale = 2.07 / zoom; // zoom=2 â†’ repeat=0.5
      texture.repeat.set(scale, scale);
      texture.offset.set(0.65 - scale / 2, 0.52 - scale / 2);
      // apply rotation in degrees
      texture.rotation = (rotation * Math.PI) / 180;
      texture.needsUpdate = true;

      screenRef.current.material = new THREE.MeshBasicMaterial({ map: texture });
    } else {
      // fallback to default screen material
      screenRef.current.material = materials.Screen;
    }
  }, [texture, zoom, rotation, materials]);
  return (
    <group {...props} dispose={null}>
      <group name="RootNode" rotation={[Math.PI / 2, 0, 0]} userData={{ name: 'RootNode' }}>
        <group
          name="Cube"
          position={[0, 50.454395, -8.887981]}
          rotation={[-1.942587, 0, -Math.PI / 2]}
          scale={[99.999992, 100, 99.999992]}
          userData={{ name: 'Cube' }}>
          <mesh
            name="Cube_Auto_04_0"
            castShadow
            receiveShadow
            geometry={nodes.Cube_Auto_04_0.geometry}
            material={materials.Auto_04}
            userData={{ name: 'Cube_Auto_04_0' }}
          />
          <mesh
            ref={screenRef}
            name="Cube_Screen_0"
            castShadow
            receiveShadow
            geometry={nodes.Cube_Screen_0.geometry}
            material={materials.Screen}
            userData={{ name: 'Cube_Screen_0' }}
          />
        </group>
        <mesh
          name="Cube004_Auto_01_0"
          castShadow
          receiveShadow
          geometry={nodes.Cube004_Auto_01_0.geometry}
          material={materials.Auto_01}
          position={[0, -25.592501, 7.313487]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
          userData={{ name: 'Cube.004_Auto_01_0' }}
        />
        <mesh
          name="Cube007_Auto_01_0"
          castShadow
          receiveShadow
          geometry={nodes.Cube007_Auto_01_0.geometry}
          material={materials.Auto_01}
          position={[0, -40.158932, 75.441086]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
          userData={{ name: 'Cube.007_Auto_01_0' }}
        />
        <mesh
          name="Keys_Auto_02_0"
          castShadow
          receiveShadow
          geometry={nodes.Keys_Auto_02_0.geometry}
          material={materials.Auto_02}
          position={[-72.226685, -27.683142, 35.450016]}
          rotation={[-Math.PI / 2, 0, 0.001774]}
          scale={[100.000008, 100.000008, 100]}
          userData={{ name: 'Keys_Auto_02_0' }}
        />
        <mesh
          name="Cube012_Auto_02_0"
          castShadow
          receiveShadow
          geometry={nodes.Cube012_Auto_02_0.geometry}
          material={materials.Auto_02}
          position={[-91.066963, -25.46246, 22.756575]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
          userData={{ name: 'Cube.012_Auto_02_0' }}
        />
        <mesh
          name="Cube018_Auto_02_0"
          castShadow
          receiveShadow
          geometry={nodes.Cube018_Auto_02_0.geometry}
          material={materials.Auto_02}
          position={[-60.214893, -21.794281, -5.751523]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
          userData={{ name: 'Cube.018_Auto_02_0' }}
        />
        <mesh
          name="Cube019_Auto_02_0"
          castShadow
          receiveShadow
          geometry={nodes.Cube019_Auto_02_0.geometry}
          material={materials.Auto_02}
          position={[-24.726269, -21.794281, -5.751523]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
          userData={{ name: 'Cube.019_Auto_02_0' }}
        />
        <mesh
          name="Cube013_Auto_02_0"
          castShadow
          receiveShadow
          geometry={nodes.Cube013_Auto_02_0.geometry}
          material={materials.Auto_02}
          position={[-91.35231, -28.700191, 4.165114]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
          userData={{ name: 'Cube.013_Auto_02_0' }}
        />
        <mesh
          name="Cube006_Auto_03_0"
          castShadow
          receiveShadow
          geometry={nodes.Cube006_Auto_03_0.geometry}
          material={materials.Auto_03}
          position={[17.368872, -25.592501, 7.313487]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
          userData={{ name: 'Cube.006_Auto_03_0' }}
        />
        <mesh
          name="Cube005_Auto_03_0"
          castShadow
          receiveShadow
          geometry={nodes.Cube005_Auto_03_0.geometry}
          material={materials.Auto_03}
          position={[0, -25.592501, 7.313487]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
          userData={{ name: 'Cube.005_Auto_03_0' }}
        />
        <mesh
          name="Cube017_Auto_03_0"
          castShadow
          receiveShadow
          geometry={nodes.Cube017_Auto_03_0.geometry}
          material={materials.Auto_03}
          position={[100.653862, -28.852913, 25.184172]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
          userData={{ name: 'Cube.017_Auto_03_0' }}
        />
        <mesh
          name="Cube001_Auto_03_0"
          castShadow
          receiveShadow
          geometry={nodes.Cube001_Auto_03_0.geometry}
          material={materials.Auto_03}
          position={[0, 50.454395, -8.887981]}
          rotation={[-1.942587, 0, 0]}
          scale={[100, 100.000008, 100.000008]}
          userData={{ name: 'Cube.001_Auto_03_0' }}
        />
        <mesh
          name="BezierCurve001_Auto_03_0"
          castShadow
          receiveShadow
          geometry={nodes.BezierCurve001_Auto_03_0.geometry}
          material={materials.Auto_03}
          position={[-74.932137, -17.337799, -70.693314]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
          userData={{ name: 'BezierCurve.001_Auto_03_0' }}
        />
        <mesh
          name="BezierCurve_Auto_03_0"
          castShadow
          receiveShadow
          geometry={nodes.BezierCurve_Auto_03_0.geometry}
          material={materials.Auto_03}
          position={[-74.932137, -19.174137, -70.693314]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
          userData={{ name: 'BezierCurve_Auto_03_0' }}
        />
        <mesh
          name="BezierCurve002_Auto_03_0"
          castShadow
          receiveShadow
          geometry={nodes.BezierCurve002_Auto_03_0.geometry}
          material={materials.Auto_03}
          position={[-74.932137, -20.537062, -70.693314]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
          userData={{ name: 'BezierCurve.002_Auto_03_0' }}
        />
        <mesh
          name="Cube015_Auto_03_0"
          castShadow
          receiveShadow
          geometry={nodes.Cube015_Auto_03_0.geometry}
          material={materials.Auto_03}
          position={[-182.228897, -22.980457, 7.313487]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
          userData={{ name: 'Cube.015_Auto_03_0' }}
        />
        <mesh
          name="Cube014_Auto_03_0"
          castShadow
          receiveShadow
          geometry={nodes.Cube014_Auto_03_0.geometry}
          material={materials.Auto_03}
          position={[-182.228897, -22.980457, 7.313487]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
          userData={{ name: 'Cube.014_Auto_03_0' }}
        />
        <mesh
          name="Cylinder_Auto_03_0"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder_Auto_03_0.geometry}
          material={materials.Auto_03}
          position={[7.520071, 0.851006, 2.928013]}
          rotation={[-2.049084, 0, 0]}
          scale={100}
          userData={{ name: 'Cylinder_Auto_03_0' }}
        />
        <mesh
          name="Cylinder002_Auto_03_0"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder002_Auto_03_0.geometry}
          material={materials.Auto_03}
          position={[-3.49358, 0.851006, 2.928013]}
          rotation={[-2.049084, 0, 0]}
          scale={100}
          userData={{ name: 'Cylinder.002_Auto_03_0' }}
        />
        <mesh
          name="Cube016_Auto_03_0"
          castShadow
          receiveShadow
          geometry={nodes.Cube016_Auto_03_0.geometry}
          material={materials.Auto_03}
          position={[-0.604886, -11.892666, -52.539356]}
          rotation={[2.549628, 0.005322, -1.581109]}
          scale={[100.000008, 99.999992, 100.000008]}
          userData={{ name: 'Cube.016_Auto_03_0' }}
        />
        <mesh
          name="Cube002_Auto_04_0"
          castShadow
          receiveShadow
          geometry={nodes.Cube002_Auto_04_0.geometry}
          material={materials.Auto_04}
          position={[0, 50.454395, -8.887981]}
          rotation={[-1.942587, 0, 0]}
          scale={[100, 100.000008, 100.000008]}
          userData={{ name: 'Cube.002_Auto_04_0' }}
        />
        <mesh
          name="Cube003_Auto_04_0"
          castShadow
          receiveShadow
          geometry={nodes.Cube003_Auto_04_0.geometry}
          material={materials.Auto_04}
          position={[0, 50.454395, -8.887981]}
          rotation={[-1.942587, 0, -Math.PI / 2]}
          scale={[99.999992, 100, 99.999992]}
          userData={{ name: 'Cube.003_Auto_04_0' }}
        />
        <mesh
          name="Cube020_Auto_04_0"
          castShadow
          receiveShadow
          geometry={nodes.Cube020_Auto_04_0.geometry}
          material={materials.Auto_04}
          position={[0, 50.454395, -8.887981]}
          rotation={[-1.942587, 0, -Math.PI / 2]}
          scale={[99.999992, 100, 99.999992]}
          userData={{ name: 'Cube.020_Auto_04_0' }}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/models/laptop.glb')

export default Laptop
